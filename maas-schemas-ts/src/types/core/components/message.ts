/*

undefined
MaaS booking message object

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';

type Defined =
  | Record<string, unknown>
  | Array<unknown>
  | string
  | boolean
  | number
  | null;
const Defined = t.union([
  t.UnknownRecord,
  t.UnknownArray,
  t.string,
  t.boolean,
  t.number,
  t.null,
]);

export const schemaId = 'http://maasglobal.com/core/components/message.json';

// Message
// The default export. More information at the top.
export type Message = t.Branded<
  {
    text?: string;
    mode?: string &
      (
        | 'MODE_WALK'
        | 'MODE_BICYCLE'
        | 'MODE_CAR'
        | 'MODE_TRAM'
        | 'MODE_SUBWAY'
        | 'MODE_RAIL'
        | 'MODE_BUS'
        | 'MODE_FERRY'
        | 'MODE_CABLE_CAR'
        | 'MODE_GONDOLA'
        | 'MODE_FUNICULAR'
        | 'MODE_SHARED_BICYCLE'
        | 'MODE_SHARED_E_BICYCLE'
        | 'MODE_SHARED_CAR'
        | 'MODE_TRANSIT'
        | 'MODE_TRAIN'
        | 'MODE_TRAINISH'
        | 'MODE_BUSISH'
        | 'MODE_TAXI'
        | 'MODE_SCOOTER'
      );
    property?: string;
  } & {
    text: Defined;
    mode: Defined;
    property: Defined;
  },
  MessageBrand
>;
export const Message = t.brand(
  t.intersection([
    t.partial({
      text: t.string,
      mode: t.intersection([
        t.string,
        t.union([
          t.literal('MODE_WALK'),
          t.literal('MODE_BICYCLE'),
          t.literal('MODE_CAR'),
          t.literal('MODE_TRAM'),
          t.literal('MODE_SUBWAY'),
          t.literal('MODE_RAIL'),
          t.literal('MODE_BUS'),
          t.literal('MODE_FERRY'),
          t.literal('MODE_CABLE_CAR'),
          t.literal('MODE_GONDOLA'),
          t.literal('MODE_FUNICULAR'),
          t.literal('MODE_SHARED_BICYCLE'),
          t.literal('MODE_SHARED_E_BICYCLE'),
          t.literal('MODE_SHARED_CAR'),
          t.literal('MODE_TRANSIT'),
          t.literal('MODE_TRAIN'),
          t.literal('MODE_TRAINISH'),
          t.literal('MODE_BUSISH'),
          t.literal('MODE_TAXI'),
          t.literal('MODE_SCOOTER'),
        ]),
      ]),
      property: t.string,
    }),
    t.type({
      text: Defined,
      mode: Defined,
      property: Defined,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      text?: string;
      mode?: string &
        (
          | 'MODE_WALK'
          | 'MODE_BICYCLE'
          | 'MODE_CAR'
          | 'MODE_TRAM'
          | 'MODE_SUBWAY'
          | 'MODE_RAIL'
          | 'MODE_BUS'
          | 'MODE_FERRY'
          | 'MODE_CABLE_CAR'
          | 'MODE_GONDOLA'
          | 'MODE_FUNICULAR'
          | 'MODE_SHARED_BICYCLE'
          | 'MODE_SHARED_E_BICYCLE'
          | 'MODE_SHARED_CAR'
          | 'MODE_TRANSIT'
          | 'MODE_TRAIN'
          | 'MODE_TRAINISH'
          | 'MODE_BUSISH'
          | 'MODE_TAXI'
          | 'MODE_SCOOTER'
        );
      property?: string;
    } & {
      text: Defined;
      mode: Defined;
      property: Defined;
    },
    MessageBrand
  > => true,
  'Message',
);
export interface MessageBrand {
  readonly Message: unique symbol;
}

export default Message;

// Success
